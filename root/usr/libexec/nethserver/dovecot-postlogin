#!/usr/bin/perl

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::AccountsDB;
use esmith::ConfigDB;

# Read secondary groups and prepare a CSV list
my @groups = map { sprintf('%s', (getgrgid($_))[0]) } split(/ /, qx(id -G \$USER));
$ENV{ACL_GROUPS}=join(',', @groups);
$ENV{MASTER_USER}=$ENV{USER};

#
# Export USERDB overrides
#
$ENV{USERDB_KEYS} .= 'acl_groups master_user ';

#
# Export quota
#
#
my $db = esmith::ConfigDB->open_ro();

if ( ($db->get_prop('dovecot', 'QuotaStatus') || 'disabled') eq 'enabled' ) {
    $ENV{USERDB_KEYS} .= 'quota_rule ';
    my $quota = $db->get_prop('dovecot', 'QuotaDefaultSize') || 20;
    my $user = esmith::AccountsDB->open_ro()->get($ENV{USER});
    if ($user) {
        my $qt = $user->prop('MailQuotaType') || 'default';
        if ($qt eq 'custom') {
            $quota = $user->prop('MailQuotaCustom') || 'unlimited';
            if ($quota eq 'unlimited') {
                $quota = 0;
            } else {
                $quota = ($quota * 100) ."M";
            }
        }
    }
        
    $ENV{QUOTA_RULE}="*:storage=$quota";
}

#
# The ENVironment is ready, we are done.
#
exec(@ARGV) or die "Unable to exec @ARGV: $!";

